name: "Build & Test"

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  test_release:
    strategy:
      matrix:
        os: [ ubuntu-latest, macos-11, windows-2019 ]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - uses: turtlebrowser/get-conan@main
      - uses: ilammy/msvc-dev-cmd@v1
      - name: Run Conan Install
        run: |
          conan profile detect
          conan install -of . .
      - name: Run CMake
        run: cmake --preset conan-release -DBUILD_TESTS=ON .
      - name: Compile
        run: cmake --build build/Release --target testScipPP
      - name: Run Tests
        run: ./build/Release/test/testScipPP
  clang_tidy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: turtlebrowser/get-conan@main
      - name: Run Conan Install
        run: |
          conan profile detect
          conan install -of . .
      - name: Create CMake Compilation Database
        run: cmake --preset conan-release -DCMAKE_EXPORT_COMPILE_COMMANDS=ON .
      - name: Run Clang-Tidy
        run: clang-tidy-14 -p build/Release source/*.cpp include/**/*.hpp
  clang_format:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: DoozyX/clang-format-lint-action@v0.16.2
        with:
          source: source include test
          extensions: 'hpp,cpp'
          clangFormatVersion: 16
  doxygen:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: ssciwr/doxygen-install@v1
        with:
          version: "1.9.6"
      - uses: ts-graphviz/setup-graphviz@v1
      - name: Prepare Doxygen Config
        run: echo "PROJECT_NUMBER = ${GITHUB_REF}" >> Doxyfile
      - name: Run Doxygen
        run: doxygen
      - name: Zip HTML Docu
        run: zip -q -9 -r html.zip html
      - name: Store HTML Docu
        uses: actions/upload-artifact@v3
        with:
          name: doxygen-html
          path: html.zip
          retention-days: 2
