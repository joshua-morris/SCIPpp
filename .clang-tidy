Checks: '-*,readability-identifier-naming,modernize-use-using,modernize-concat-nested-namespaces,readability-magic-numbers,bugprone-branch-clone,bugprone-incorrect-roundings,bugprone-lambda-function-name,bugprone-reserved-identifier,bugprone-use-after-move,cppcoreguidelines-avoid-goto,misc-static-assert,misc-unused-parameters,modernize-deprecated-headers,modernize-make-unique,modernize-use-default-member-init,modernize-use-emplace,modernize-use-equals-default,modernize-use-nodiscard,modernize-use-noexcept,modernize-use-nullptr,performance-*,readability-braces-around-statements,readability-container-size-empty,readability-convert-member-functions-to-static,readability-string-compare'
WarningsAsErrors: '-*,readability-identifier-naming,modernize-use-using,modernize-concat-nested-namespaces,readability-magic-numbers,readability-braces-around-statements'
FormatStyle: 'file'
CheckOptions:
  - { key: readability-identifier-naming.ClassCase, value: CamelCase }
  - { key: readability-identifier-naming.ClassConstantCase, value: UPPER_CASE }
  - { key: readability-identifier-naming.ClassConstantPrefix, value: 's_' }
  - { key: readability-identifier-naming.ClassMemberCase, value: camelBack }
  - { key: readability-identifier-naming.ClassMemberPrefix, value: 's_' }
  - { key: readability-identifier-naming.ConstantCase, value: UPPER_CASE }
  - { key: readability-identifier-naming.ConstantMemberCase, value: UPPER_CASE }
  - { key: readability-identifier-naming.ConstantMemberPrefix, value: 'm_' }
  - { key: readability-identifier-naming.ConstantParameterCase, value: UPPER_CASE }
  - { key: readability-identifier-naming.ConstantPointerParameterCase, value: UPPER_CASE }
  - { key: readability-identifier-naming.EnumCase, value: CamelCase }
  - { key: readability-identifier-naming.EnumConstantCase, value: UPPER_CASE }
  - { key: readability-identifier-naming.FunctionCase, value: camelBack }
  - { key: readability-identifier-naming.GlobalConstantCase, value: UPPER_CASE }
  - { key: readability-identifier-naming.GlobalFunctionCase, value: camelBack }
  - { key: readability-identifier-naming.LocalConstantCase, value: UPPER_CASE }
  - { key: readability-identifier-naming.MacroDefinitionCase, value: UPPER_CASE }
  - { key: readability-identifier-naming.MacroDefinitionPrefix, value: 'SCIPPP_' }
  - { key: readability-identifier-naming.MemberCase, value: camelBack }
  - { key: readability-identifier-naming.MemberPrefix, value: 'm_' }
  - { key: readability-identifier-naming.MethodCase, value: camelBack }
  - { key: readability-identifier-naming.NamespaceCase, value: lower_case }
  - { key: readability-identifier-naming.ParameterCase, value: camelBack }
  - { key: readability-identifier-naming.PrivateMemberCase, value: camelBack }
  - { key: readability-identifier-naming.PrivateMemberPrefix, value: 'm_' }
  - { key: readability-identifier-naming.ProtectedMemberCase, value: camelBack }
  - { key: readability-identifier-naming.ProtectedMemberPrefix, value: 'm_' }
  - { key: readability-identifier-naming.PublicMemberCase, value: camelBack }
  - { key: readability-identifier-naming.PublicMemberPrefix, value: '' }
  - { key: readability-identifier-naming.PublicMethodCase, value: camelBack }
  - { key: readability-identifier-naming.StaticConstantCase, value: UPPER_CASE }
  - { key: readability-identifier-naming.TemplateParameterCase, value: CamelCase }
  - { key: readability-identifier-naming.TypeTemplateParameterIgnoredRegexp, value: expr-type }
  - { key: readability-identifier-naming.StructCase, value: CamelCase }
  - { key: readability-identifier-naming.UnionCase, value: CamelCase }
  - { key: readability-identifier-naming.VariableCase, value: camelBack }
